apiVersion: v1
kind: ConfigMap
metadata:
  namespace: iid-qa
  creationTimestamp: null
  name: ciapi-customer-subscription-service-qa
  #resourceVersion: "1.0"
  #uid: 43bd13f2-47a3-440a-ab5f-c0425a5d9519
data:
  application-qa.yml: |
    ---
    spring:
      config:
        activate:
          on-profile: qa
      datasource:
        username: itciscu
        password: itciscuq
        driverClassName: org.postgresql.Driver
        factory: org.apache.tomcat.jdbc.pool.DataSourceFactory
        tomcat:
          max-age: 1800000
          max-wait: 30000
          max-active: 80
          initial-size: 20
          max-idle: 5
          min-idle: 5
          time-between-eviction-runs-millis: 30000
          min-evictable-idle-time-millis: 30000
          remove-abandoned: true
          remove-abandoned-timeout: 600
          log-abandoned: true
          abandon-when-percentage-full: 0
          test-on-borrow: true
          validation-query: select 1
          validation-interval: 20000
          test-while-idle: true
          test-on-connect: true
          log-validation-errors: true
          jdbcInterceptors: ConnectionState;StatementFinalizer;QueryTimeoutInterceptor(queryTimeout=90);SlowQueryReport(threshold=30000);ResetAbandonedTimer
      messages:
        basename: common-messages,messages
        cache-seconds: -1
        encoding: UTF-8
      aop:
        proxy-target-class: true
      mvc:
        async:
          request-timeout: 90000
      security:
        user:
          name: ciusapi
          password: x3iY9P&*8%zK
          roles: CIAPIUSER,APP_CLIENT,ISUSER
      http:
        encoding:
          force: true
    twilio:
      service:
        enabled: false
      api:
        accountSid: AC3e89160e70a9d54f630b138fc0534a17
        authToken: 4c976a058361049484840a203fd8f775
        serviceId: VA5f2d01c87c30d30956fcf59b96514b78
    management:
      context-path: /management/ciapi/customer-subscriptions
      security:
        enabled: false
      endpoints:
        enabled-by-default: false
        web:
          exposure:
            include: '*'
          base-path: /management/ciapi/customer-subscriptions
      endpoint:
        info:
          enabled: true
        health:
          enabled: true
          show-details: always
        metrics:
          enabled: true
        env:
          enabled: true
          mask:
            enabled: true
    endpoints:
      actuator:
        sensitive: false
      shutdown:
        enabled: true
      health:
        sensitive: false
    #eureka:
    #  instance:
    #    hostname: ${app_registry_uri}
    #    instanceId: ${app_registry_uri}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
    #    status-page-url-path: /management/ciapi/customer-subscriptions/info
    #    health-check-url-path: /management/ciapi/customer-subscriptions/health
    #  client:
    #    healthcheck:
    #      enabled: true
    #    heartbeat-executor-thread-pool-size: 20
    #    cache-refresh-executor-thread-pool-size: 20
    #    eureka-server-total-connections-per-host: 100
    #    eureka-server-connect-timeout-seconds: 15
    #    eureka-server-read-timeout-seconds: 20
    ciapi:
      database:
        schema: ciapi_qa
      security:
        oauth2:
          uri:
            antpattern: /customers/**
        basic:
          uri:
            antpattern: /de/customers/**,/is/customers/**
          roles: CIAPIUSER,APP_CLIENT,ISUSER
          users:
            -
              username: ciusapi
              password: x3iY9P&*8%zK
              roles: CIAPIUSER,APP_CLIENT
            -
              username: wso24ciapi
              password: ws021sC1ap1!
              roles: ISUSER,APP_CLIENT
      jwt:
        key:
          file: wso2carbon-test.cert
    ciapi-customer-default-language-iso-code: en-US
    httpclient:
      max-total-connections: 1000
      max-route-connections: 200
      default-keep-alive-time: 30000
      idle-connection-wait-time: 30000
      connect-timeout: 20000
      request-timeout: 60000
      socket-timeout: 60000
    nr:
      insights:
        enabled: true
        date:
          format: MM/dd/yyyy hh:mm aa z
    security:
      basic:
        enabled: true
      user:
        name: ciusapi
        password: 'x3iY9P&*8%zK'
        role: APP_CLIENT
    application-service:
      host: ciapi-application-service
      port: 80
      url: /
      username: ciusapi
      password: x3iY9P&*8%zK
      protocol: http
    customer-service:
      host: ciapi-customer-service
      port: 80
      url: /
      username: ciusapi
      password: x3iY9P&*8%zK
      protocol: http
    user-subscription-service:
      host: ciapi-user-subscription-service
      port: 80
      url: /
      username: ciusapi
      password: x3iY9P&*8%zK
      protocol: http
    is-application-service:
      host: ciapi-application-service
      port: 80
      url: /is/
      username: wso24ciapi
      password: ws021sC1ap1!
      protocol: http
    is-customer-service:
      host: ciapi-customer-service
      port: 80
      url: /is/
      username: wso24ciapi
      password: ws021sC1ap1!
      protocol: http
    wso2is-api-service:
      host: cidm-qa.uccenter.com
      url: api/west/ci/v0.1
      username: ciapiuser
      password: Testing1
    swagger:
      title: Customer Subscription API for Admin Portal and WSO2
      description: This API provides the services needed to operate on CI Customer Subscription
      version: 1.0
      contact:
        name: West Unified Communications
        email: ciapi.support@west.com
      path:
        selector: /customers.*,/is/customers.*,/de.*
    server:
      servlet:
        encoding:
          force: true
    health:
      config:
        enabled: false
    logging:
      pattern:
        console: |
          %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{APP_NAME:-${newrelic.config.process_host.display_name:-}},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-},%X{SPACE_NAME:-${cloud.application.space_name:-}},%X{authuser},%X{_tid_}] 00 --- [%t] %logger : %replace(%msg){'[\r\n]',' -- '}--%replace(%ex){'[\r\n]',' -- '}%n
        level: |
          %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%X{APP_NAME:-${newrelic.config.process_host.display_name:-}},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-},%X{X-Span-Export:-},%X{SPACE_NAME:-${cloud.application.space_name:-}},%X{authuser},%X{_tid_}] 00 --- [%t] %logger : %replace(%msg){'[\r\n]',' -- '}--%replace(%ex){'[\r\n]',' -- '}%n
      level:
        root: DEBUG
        org.springframework: DEBUG
        org.apache.http: ERROR
        org.hibernate: ERROR
        org.springframework.aop.interceptor.CustomizableTraceInterceptor: ERROR
        org.springframework.boot.autoconfigure: ERROR
        com.westuc.ciapi.Slf4jRequestLoggingFilter: ERROR
        org.springframework.boot.autoconfigure.security: ERROR
        org.springframework.security : ERROR
        org.springframework.jdbc: DEBUG
        org.springframework.amqp.rabbit.listener.BlockingQueueConsumer: ERROR
        com.netflix.eureka: DEBUG
        com.netflix.discovery: DEBUG
        com.rabbitmq.client: ERROR
        com.newrelic: INFO
    server.error.include-message: always
    server.servlet.encoding.force: true
    eureka.client.enabled: false
    management.health.rabbit.enabled: false
    message: '****|CIAPI-CUSTOMER-SUBSCRIPTION-SERVICE|****'
    ---
    spring:
      datasource:
        url: 'jdbc:postgresql://cidmdb-rw-qa-den06.west.com:5432/cidmdb?currentSchema=ciapi_qa'
      config:
        activate:
          on-profile: den06-qa | gcp-den06-qa
    ---
    spring:
      datasource:
        url: 'jdbc:postgresql://cidmdb-rw-qa-swn01.west.com:5432/cidmdb?currentSchema=ciapi_qa'
      config:
        activate:
          on-profile: swn01-qa | gcp-swn01-qa
